{
    "openapi": "3.0.0",
    "info": {
        "title": "Planify API",
        "version": "1.0.0",
        "description": "API for managing todos with authentication"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Local development server"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "UserRegistration": {
                "type": "object",
                "required": [
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "mahmoud"
                    },
                    "email": {
                        "type": "string",
                        "example": "mahmoud@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    }
                }
            },
            "VerifyOtp": {
                "type": "object",
                "required": [
                    "email",
                    "otp"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "mahmoud@example.com"
                    },
                    "otp": {
                        "type": "string",
                        "example": "1234"
                    }
                }
            },
            "Login": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "mahmoud@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    }
                }
            },
            "ForgotPassword": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "mahmoud@example.com"
                    }
                }
            },
            "ResetPassword": {
                "type": "object",
                "required": [
                    "email",
                    "otp",
                    "newPassword"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "mahmoud@example.com"
                    },
                    "otp": {
                        "type": "string",
                        "example": "1234"
                    },
                    "newPassword": {
                        "type": "string",
                        "example": "newpassword123"
                    }
                }
            },
            "Todo": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "507f1f77bcf86cd799439011"
                    },
                    "title": {
                        "type": "string",
                        "example": "Buy groceries"
                    },
                    "description": {
                        "type": "string",
                        "example": "Milk, bread, eggs"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF0000"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-31T10:00:00Z"
                    },
                    "completed": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "TodoInput": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Buy groceries"
                    },
                    "description": {
                        "type": "string",
                        "example": "Milk, bread, eggs"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF0000"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-31T10:00:00Z"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "jwt.token.here"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "An error occurred"
                    }
                }
            }
        }
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Registers a new user and sends an OTP to the provided email for verification.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered. Please verify your email with the OTP sent."
                    },
                    "400": {
                        "description": "Username or email already exists, or required fields missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify-otp": {
            "post": {
                "summary": "Verify email with OTP",
                "description": "Verifies the user's email using the OTP sent during registration.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully. Please sign in."
                    },
                    "400": {
                        "description": "Invalid OTP, OTP expired, or required fields missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "summary": "Log in and receive a JWT token",
                "description": "Authenticates the user and returns a JWT token for accessing protected endpoints.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email or password missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Please verify your email before logging in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "summary": "Request a password reset OTP",
                "description": "Sends an OTP to the user's email for password reset.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP has been sent to your email for password reset"
                    },
                    "400": {
                        "description": "Email is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Please verify your email before requesting a password reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "summary": "Reset password with OTP",
                "description": "Resets the user's password using the OTP sent to their email.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPassword"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been reset successfully"
                    },
                    "400": {
                        "description": "Invalid OTP, OTP expired, new password too short, or required fields missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/todo": {
            "post": {
                "summary": "Create a new todo",
                "description": "Creates a new todo item for the authenticated user.",
                "tags": [
                    "Todos"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TodoInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Todo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Todo"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid title or title missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User ID missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all todos for the authenticated user",
                "description": "Retrieves a list of all todo items for the authenticated user.",
                "tags": [
                    "Todos"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of todos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Todo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User ID missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No todos found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/todo/{id}": {
            "patch": {
                "summary": "Update a specific todo by ID",
                "description": "Updates the details of a specific todo item for the authenticated user.",
                "tags": [
                    "Todos"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Todo ID",
                        "example": "507f1f77bcf86cd799439011"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Buy groceries updated"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Milk, bread, eggs, cheese"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "high"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "#00FF00"
                                    },
                                    "dueDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-12-31T12:00:00Z"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Todo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Todo ID is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User ID missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo or user todos not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a specific todo by ID",
                "description": "Deletes a specific todo item for the authenticated user.",
                "tags": [
                    "Todos"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Todo ID",
                        "example": "507f1f77bcf86cd799439011"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo deleted successfully"
                    },
                    "400": {
                        "description": "Todo ID is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User ID missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo or user todos not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}